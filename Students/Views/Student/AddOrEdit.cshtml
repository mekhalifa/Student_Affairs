@model DAL.ViewModels.StudentVM
@using DAL.Enums
@{
    Layout = null;
}

@using (Html.BeginForm("AddOrEdit", "Student", FormMethod.Post, new { onsubmit = "return SubmitForm(this)", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.Photo)



    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name,null, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Gender, new { @class = "control-label" })

            @Html.DropDownListFor(m => m.Gender,
                             new SelectList(Enum.GetValues(typeof(Gender))),
                             "Select Gender",  new { @class = "form-control" } )
            @Html.ValidationMessageFor(model => model.Gender)
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Address, new { @class = "control-label" })
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label" })
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.EmailAddress, new { @class = "control-label" })
            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6">
            <span> @Html.Label("Birth Date", htmlAttributes: new { @class = "control-label" })</span>
            <div class='input-group' id='datetimepicker1'>

                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>

                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.ClassID, new { @class = "control-label" })
            @Html.DropDownListFor(m => m.ClassID, (SelectList)ViewBag.classList, "Select Class",  new { @class = "form-control" } )
            @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
        </div>

    </div>
    <div class="row">
        <div class="form-group col-md-12">
            <label>Upload Image</label>
            <div class="input-group">
                <span class="input-group-btn">
                    <span class="btn btn-default btn-file">
                        Browse… <input type="file" id="imgInp" name="ImageData">
                    </span>
                </span>
                <input type="text" class="form-control" readonly>
            </div>
            <img id='img-upload' class="img-circle" />
        </div>
    </div>

    <div class="form-group ">
        <input type="submit" value="Submit" class="btn btn-primary" />
        <input type="reset" value="Reset" class="btn" />
    </div>
}

<script type="text/javascript">


    $(document).ready(function () {

        $('#datetimepicker1').datetimepicker({
            format: 'L'
        });
        $('#BirthDate').val('01/01/2000');

        $(document).on('change', '.btn-file :file', function () {
            var input = $(this),
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [label]);
        });

        $('.btn-file :file').on('fileselect', function (event, label) {

            var input = $(this).parents('.input-group').find(':text'),
                log = label;

            if (input.length) {
                input.val(log);
            } else {
                if (log) alert(log);
            }

        });

        if ($('#Photo').val())
            $('#img-upload').attr('src', $('#Photo').val());

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#img-upload').attr('src', e.target.result);
                    $('#Photo').val(e.target.result)
                }

                reader.readAsDataURL(input.files[0]);

            }
        }

        $("#imgInp").change(function () {
            readURL(this);
        });
    });
</script>
